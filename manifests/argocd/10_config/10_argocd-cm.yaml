apiVersion: v1
data:
  application.instanceLabelKey: argocd.argoproj.io/instance
  configManagementPlugins: |
    - name: kapitan
      generate:
        command: [kapitan, refs, --reveal, --refs-path, ../../refs/, --file, ./]
  repositories: '- url: ssh://git@github.com/projectsyn/test-cluster-catalog.git'
  repository.credentials: |
    - url: ssh://git@
      sshPrivateKeySecret:
        name: argo-ssh-key
        key: sshPrivateKey
  resource.customizations: |
    admissionregistration.k8s.io/MutatingWebhookConfiguration:
      ignoreDifferences: |
        jsonPointers:
          - /webhooks/0/clientConfig/caBundle
    admissionregistration.k8s.io/ValidatingWebhookConfiguration:
      ignoreDifferences: |
        jsonPointers:
          - /webhooks/0/clientConfig/caBundle
    apiextensions.k8s.io/CustomResourceDefinition:
      ignoreDifferences: |
        jsonPointers:
          - /status
          - /spec/scope
    pkg.crossplane.io/Provider:
      health.lua: |
        hs = {}
        if obj.status ~= nil then
          if obj.status.conditions ~= nil then
            installed = false
            healthy = false
            for i, condition in ipairs(obj.status.conditions) do
              if condition.type == "Installed" then
                installed = condition.status == "True"
                installed_message = condition.reason
              elseif condition.type == "Healthy" then
                healthy = condition.status == "True"
                healthy_message = condition.reason
              end
            end
            if installed and healthy then
              hs.status = "Healthy"
            else
              hs.status = "Degraded"
            end
            hs.message = installed_message .. " " .. healthy_message
            return hs
          end
        end

        hs.status = "Progressing"
        hs.message = "Waiting for provider to be installed"
        return hs
kind: ConfigMap
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/part-of: argocd
    name: argocd-cm
  name: argocd-cm
  namespace: syn
